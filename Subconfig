local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")

-- Webhook URL
local webhookURL = "https://discord.com/api/webhooks/..."

-- Configuration settings
local config = {
    enablePlatform = true,        -- เปิด/ปิดการสร้าง platform
    enableTargetFinding = true,   -- เปิด/ปิดการค้นหาเป้าหมาย
    enableFallback = true,        -- เปิด/ปิดการตรวจสอบตำแหน่ง fallback
    enableWebhookAlert = true,    -- เปิด/ปิดการแจ้งเตือน Webhook
    enableNoClip = true,          -- เปิด/ปิดการ noclip ทุก part ยกเว้น platform
    enableBobberMovement = true   -- เปิด/ปิดให้ bobber ย้ายตามตำแหน่งเป้าหมาย
}

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local initialCFrame = CFrame.new(2817.91724, 130.49205, 2692.14746)
humanoidRootPart.CFrame = initialCFrame -- Set the character's starting position

local platform
local lastFallbackTime = 0
local fallbackDelay = 5
local fallbackPosition = CFrame.new(2817.91724, 130.49205, 2692.14746)
local nearbyDistance = 40

local function enableNoClip()
    if config.enableNoClip then
        for _, part in pairs(workspace:GetDescendants()) do
            if part:IsA("Part") and part ~= platform then
                part.CanCollide = false
            end
        end
    end
end

local function sendWebhookMessage(targetName)
    if config.enableWebhookAlert then
        local data = {
            ["username"] = "Alert Bot",
            ["content"] = "พบเป้าหมาย: " .. targetName .. "!"
        }
        local jsonData = HttpService:JSONEncode(data)
        HttpService:PostAsync(webhookURL, jsonData, Enum.HttpContentType.ApplicationJson)
    end
end

local function createPlatform()
    if config.enablePlatform and not platform then
        platform = Instance.new("Part")
        platform.Size = Vector3.new(10, 1, 10)
        platform.Anchored = true
        platform.Transparency = 0.5
        platform.Parent = workspace
    end
end

local function placePlatformAboveTarget(target)
    if platform and target then
        platform.CFrame = target.CFrame + Vector3.new(0, target.Size.Y / 2 + 4, 0)
    end
end

local function tweenCharacterToPlatform(targetCFrame)
    local tweenInfo = TweenInfo.new(2, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut)
    local tween = TweenService:Create(humanoidRootPart, tweenInfo, { CFrame = targetCFrame })

    tween.Completed:Connect(function()
        humanoidRootPart.CFrame = platform.CFrame + Vector3.new(0, 4, 0)
    end)

    tween:Play()
end

local function isPlayerNearby(cframe)
    for _, otherPlayer in pairs(Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (otherPlayer.Character.HumanoidRootPart.Position - cframe.Position).Magnitude
            if distance < nearbyDistance then
                return true
            end
        end
    end
    return false
end

local function tweenToFallbackPosition()
    local tweenInfo = TweenInfo.new(3, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut)
    local tween = TweenService:Create(humanoidRootPart, tweenInfo, { CFrame = fallbackPosition })
    tween:Play()
end

local function moveBobberToTarget(target)
    if config.enableBobberMovement then
        local rod = character:FindFirstChildWhichIsA("Tool")
        if rod and rod:FindFirstChild("bobber") then
            rod.bobber.CFrame = target.CFrame
        end
    end
end

RunService.RenderStepped:Connect(function()
    if not config.enableTargetFinding then return end

    local targets = {
        {name = "FischFright24", findFunc = function() 
            return workspace:FindFirstChild("zones") 
                and workspace.zones:FindFirstChild("fishing") 
                and workspace.zones.fishing:FindFirstChild("FischFright24") 
        end},
        {name = "Whale Shark", findFunc = function() 
            return workspace:FindFirstChild("zones") 
                and workspace.zones:FindFirstChild("fishing") 
                and workspace.zones.fishing:FindFirstChild("Whale Shark") 
        end},
        {name = "Great White Shark", findFunc = function() 
            return workspace:FindFirstChild("zones") 
                and workspace.zones:FindFirstChild("fishing") 
                and workspace.zones.fishing:FindFirstChild("Great White Shark") 
        end},
        {name = "Isobade", findFunc = function() return workspace:FindFirstChild("Isobade") end},
    }

    while true do
        local targetFound = false
        for _, target in ipairs(targets) do
            local targetObject = target.findFunc()
            if targetObject then
                createPlatform()
                placePlatformAboveTarget(targetObject)
                tweenCharacterToPlatform(platform.CFrame)
                sendWebhookMessage(target.name)
                moveBobberToTarget(targetObject)
                targetFound = true
                break
            end
        end

        if targetFound then break end

        if config.enableFallback then
            print("No target found. Checking fallback proximity...")
            if platform then platform:Destroy() platform = nil end

            if tick() - lastFallbackTime > fallbackDelay then
                if isPlayerNearby(fallbackPosition) then
                    print("Nearby player detected. Fallback deferred.")
                else
                    print("No players nearby. Executing fallback.")
                    tweenToFallbackPosition()
                    lastFallbackTime = tick()
                end
            end
        end

        wait(1)
    end
end)

enableNoClip()
